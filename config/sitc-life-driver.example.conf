# 请将http块内的内容放置于主配置nginx.conf中
# 需安装lua模块。
http {
    # Lua 配置
    lua_shared_dict hmac_secret 1m;
    init_by_lua '
        ngx.shared.hmac_secret:set("key", "your_hmac_secret_key")
    ';

    # 内网 IP 识别
    map $remote_addr $is_internal {
        default 0;
        # IPv4私有地址范围
        ~^192\.168\.  1;  # 192.168.0.0/16
        ~^10\.        1;  # 10.0.0.0/8
        ~^172\.(1[6-9]|2[0-9]|3[0-1])\. 1;  # 172.16.0.0/12
    }
}

# 以下是vhost conf部分
server {
    listen 80;
    listen 443 ssl;
    server_name twlife.leeskyler.top;
    root /var/www/html/sitc-life-frontend;
    index index.html;

    # SSL证书路径
    ssl_certificate /root/.acme.sh/twlife.leeskyler.top/fullchain.cer;
    ssl_certificate_key /root/.acme.sh/twlife.leeskyler.top/twlife.leeskyler.top.key;

    # ECH Config
    ssl_early_data off;


    # SSL协议和密码套件配置
    ssl_protocols TLSv1.2 TLSv1.3; # 禁用TLSv1.0和TLSv1.1，使用TLSv1.2及TLSv1.3
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_stapling on;
    ssl_stapling_verify on;

    location ~* \.(py|php|env|sql)$ {
        deny all;
        return 404;
    }

    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # 前端路由支持（用于单页应用）
    location / {
        try_files $uri $uri/ /index.html;
    }


    location /api/ {
        # 处理 OPTIONS 请求
        proxy_pass http://127.0.0.1:8080;
        proxy_read_timeout 900s;     # ≤ Cloudflare的timeout
        proxy_send_timeout 900s;
        proxy_connect_timeout 900s;
        client_max_body_size 100M;  # 必须 ≥ Cloudflare限制
        proxy_buffering off;
        proxy_request_buffering off; # 大文件必关
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_by_lua_block {
            -- 加载 FFI 并声明 OpenSSL 函数
            local ffi = require("ffi")
            ffi.cdef[[
                unsigned char *HMAC(const void *evp_md, const void *key,
                                   int key_len, const unsigned char *d, int n,
                                   unsigned char *md, unsigned int *md_len);
                const void *EVP_sha256(void);
            ]]

            -- 获取密钥和客户端IP
            local secret = ngx.shared.hmac_secret:get("key")
            local client_ip = ngx.var.remote_addr

            -- 仅内网请求生成签名
            if ngx.var.is_internal == "1" then
                -- 准备输出缓冲区
                local md = ffi.new("unsigned char[32]")  -- SHA256 输出固定32字节
                local md_len = ffi.new("unsigned int[1]")

                -- 调用 OpenSSL 计算 HMAC-SHA256
                ffi.C.HMAC(
                    ffi.C.EVP_sha256(),          -- 使用 SHA256 算法
                    secret, #secret,             -- 密钥和长度
                    client_ip, #client_ip,       -- 数据和长度
                    md, md_len                   -- 输出缓冲区
                )

                -- 将二进制结果转为 HEX 字符串
                local hex = ""
                for i = 0, 31 do  -- 遍历 32 字节
                    hex = hex .. string.format("%02x", md[i])
                end

                -- 设置请求头并记录调试信息
                ngx.req.set_header("X-Network-Signature", hex)
                ngx.log(ngx.ERR, "[HMAC-FFI] IP: ", client_ip,
                                 " | SIG: ", hex,
                                 " | Secret: ", string.sub(secret, 1, 3), "...")
            end
        }
    }

    location /mmfiletrans/ {
        rewrite ^/mmfiletrans/(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_send_timeout 86400;
        proxy_read_timeout 86400;
    }

    access_log /var/log/nginx/twlife_access.log;
    error_log /var/log/nginx/twlife_error.log;

}